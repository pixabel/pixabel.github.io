import{r as o,j as e}from"./index-nQgN1vTb.js";const n="/assets/csharp-Dv0bCWsP.png";function c(){const[s,a]=o.useState(null);return e.jsxs("section",{id:"projects",children:[e.jsx("h4",{children:"Projects"}),e.jsxs("div",{className:"row",children:[e.jsx("div",{className:"col-md-4 project-item",children:e.jsx("div",{className:"card",children:e.jsxs("div",{className:"card-body",children:[e.jsx("h5",{className:"card-title",children:"Airportsimulator"}),e.jsx("img",{src:n,height:"20px",alt:"C#"}),e.jsx("p",{className:"card-text",children:"A Windows Forms application built in C# that simulates an airport environment, allowing users to manage aircraft takeoffs, landings, calculate flight times, and more."}),e.jsxs("a",{href:"https://github.com/pixabel/airportsimulator.git",target:"_blank",rel:"noopener noreferrer",className:"btn btn-dark",children:[e.jsx("i",{className:"fab fa-github"})," View on GitHub"]}),e.jsx("button",{type:"button",className:"btn btn-dark ms-2",onClick:()=>a("airportsimulator"),children:"More Info"})]})})}),e.jsx("div",{className:"col-md-4 project-item",children:e.jsx("div",{className:"card",children:e.jsxs("div",{className:"card-body",children:[e.jsx("h5",{className:"card-title",children:"AnimalManager"}),e.jsx("img",{src:n,height:"20px",alt:"C#"}),e.jsx("p",{className:"card-text",children:"AnimalManager is a C# application designed to streamline the management of animals. It allows users to track and manage details about various animals."}),e.jsxs("a",{href:"https://github.com/pixabel/AnimalManager.git",target:"_blank",rel:"noopener noreferrer",className:"btn btn-dark",children:[e.jsx("i",{className:"fab fa-github"})," View on GitHub"]}),e.jsx("button",{type:"button",className:"btn btn-dark ms-2",onClick:()=>a("animalmanager"),children:"More Info"})]})})}),e.jsx("div",{className:"col-md-4 project-item",children:e.jsx("div",{className:"card",children:e.jsxs("div",{className:"card-body",children:[e.jsx("h5",{className:"card-title",children:"Math Zombies"}),e.jsx("i",{className:"fa-brands fa-python",style:{fontSize:"20px"}}),e.jsx("p",{className:"card-text",children:"MathZombies is an educational application that blends the excitement of a zombie-themed game with the challenge of solving math problems. Built using Python."}),e.jsxs("a",{href:"https://github.com/pixabel/mathzombies.git",target:"_blank",rel:"noopener noreferrer",className:"btn btn-dark",children:[e.jsx("i",{className:"fab fa-github"})," View on GitHub"]}),e.jsx("button",{type:"button",className:"btn btn-dark ms-2",onClick:()=>a("mathzombies"),children:"More Info"})]})})})]}),s==="airportsimulator"&&e.jsx(i,{title:"AirportSimulator Details",onClose:()=>a(null),githubLink:"https://github.com/pixabel/airportsimulator.git",children:e.jsxs("p",{children:["AirportSimulator is a desktop application I built for my C# II class at MalmÃ¶ University, using C# and Windows Forms, simulating the operations of an airport in real-time. This project provides users with the ability to manage various aspects of airport activity, focusing on the scheduling and coordination of aircraft movements. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx("strong",{children:"Key Features:"})," ",e.jsx("br",{}),"Flight Scheduling: Users can simulate both takeoff and landing operations for multiple aircraft. ",e.jsx("br",{}),"Aircraft Management: Allows tracking of multiple aircraft, including details such as model, flight number, origin, and destination. ",e.jsx("br",{}),"Runway Utilization: The application efficiently manages runway availability, ensuring that no two aircraft are using the same runway simultaneously.",e.jsx("br",{}),"Time Simulation: Calculate and display estimated arrival times based on real-world data. ",e.jsx("br",{}),"Emergency Handling: Simulate emergency landings and prioritize emergency flights. ",e.jsx("br",{}),"Realistic Visual Representation: A simplified yet functional user interface simulates the flow of air traffic at an airport. ",e.jsx("br",{}),e.jsx("br",{}),"This application serves as a demonstration of how object-oriented principles can be applied to simulate real-world systems. It showcases my skills in C#, event-driven programming, and design through the use of Windows Forms."]})}),s==="animalmanager"&&e.jsx(i,{title:"AnimalManager Details",onClose:()=>a(null),githubLink:"https://github.com/pixabel/AnimalManager.git",children:e.jsxs("p",{children:["AnimalManager is a comprehensive C# application that simplifies the management of animal information for various users. It provides a user-friendly interface where users can track and manage animals' characteristics, health records, and habitat information. ",e.jsx("br",{}),e.jsx("br",{}),e.jsx("strong",{children:"Key Features:"})," ",e.jsx("br",{}),"- Animal Tracking: Add and view detailed information about animals, including breed, age, health records, and more. ",e.jsx("br",{}),"- Health Record Management: Keep track of veterinary visits, medical records, and treatments. ",e.jsx("br",{}),"- Habitat Information: Record and manage details about the living environment for each animal. ",e.jsx("br",{}),"- User-Friendly Interface: Built using Windows Forms, ensuring a smooth and intuitive user experience.",e.jsx("br",{}),"- Database Integration: Efficiently stores data for easy access and retrieval, ensuring scalability and performance. ",e.jsx("br",{})]})}),s==="mathzombies"&&e.jsx(i,{title:"Math Zombies More Details",onClose:()=>a(null),githubLink:"https://github.com/pixabel/mathzombies.git",children:e.jsxs("p",{children:['This Python program is an interactive math-based game called "Math Zombies!" where players must solve math questions to avoid encountering zombies behind doors.',e.jsx("br",{}),e.jsx("br",{}),e.jsx("strong",{children:"Here's an overview of its functionality:"})," ",e.jsx("br",{}),"- Question Generation: Based on the player's chosen operation (multiplication, division, or modulus), random math questions are generated. For multiplication, the user selects a table, while for division and modulus, a divisor is chosen. ",e.jsx("br",{}),"- Gameplay: The player is asked to solve 12 randomly generated math questions. For each correct answer, they must choose one of several doors, behind which zombies may be hiding. The number of doors decreases as the player progresses, increasing the challenge.",e.jsx("br",{}),"- User Interaction: The player inputs their answers and door choices. If they solve all the questions correctly and avoid zombies, they win. Incorrect answers or bad door choices end the game. ",e.jsx("br",{}),"- Replay Option: After each game, the player is asked if they want to play again. The program emphasizes user input validation, randomization for question generation, and a simple but fun storyline to engage users in solving math problems."]})})]})}function i({title:s,children:a,onClose:t,githubLink:r}){return e.jsx("div",{className:"modal show d-block",tabIndex:"-1",role:"dialog",style:{backgroundColor:"rgba(0,0,0,0.5)"},children:e.jsx("div",{className:"modal-dialog modal-dialog-centered",role:"document",children:e.jsxs("div",{className:"modal-content",children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h5",{className:"modal-title",children:s}),e.jsx("button",{type:"button",className:"btn-close","aria-label":"Close",onClick:t})]}),e.jsx("div",{className:"modal-body",children:a}),e.jsxs("div",{className:"modal-footer",children:[e.jsx("button",{type:"button",className:"btn btn-secondary",onClick:t,children:"Close"}),e.jsxs("a",{href:r,target:"_blank",rel:"noopener noreferrer",className:"btn btn-dark",children:[e.jsx("i",{className:"fab fa-github"})," View on GitHub"]})]})]})})})}export{c as default};
